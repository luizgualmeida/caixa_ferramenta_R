{
  "hash": "a799a52336ad57b0e9d9edebef36b702",
  "result": {
    "markdown": "# Lista 7 - Séries Temporais (ARIMA)\n\n## Pacotes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(flexplot)\nlibrary(foreign)\nlibrary(dplyr)\nlibrary(tm)\nlibrary(ggplot2)\nlibrary(forcats)\nlibrary(rempsyc)\nlibrary(easystats)\nlibrary(kableExtra)\n\n#Específicos para series temporais\nlibrary(prophet)\nlibrary(forecast)\nlibrary(tseries)\n```\n:::\n\n\n## Limpando o ambiente\n\n\n\n\n\n# Cigarro\n\n## Carregando os dados e modificando o tipo de variável\n\n\n::: {.cell}\n\n```{.r .cell-code}\noriginal = read.spss(\"CigarrosROD_1.sav\", to.data.frame=TRUE)\nglimpse(original)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 20\nColumns: 2\n$ Dia         <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ cigarrosROD <dbl> 6, 10, 4, 13, 4, 11, 4, 6, 4, 15, 5, 14, 5, 21, 10, 31, 13…\n```\n:::\n\n```{.r .cell-code}\ndb = original\n```\n:::\n\n\n## Verificando se os dados são estacionários\n\nIniciaremos nossa primeira análise para verificar a estacionaridade dos dados por meio de uma abordagem gráfica. Este gráfico simples exibirá o número de cigarros consumidos ao longo do tempo, apresentando uma linha média que atravessa toda a linha temporal. A ideia é observar se os números de cigarros oscilam próximos à média, proporcionando uma visualização intuitiva da estacionariedade dos dados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot estilizado\n# media_cigarros <- mean(db$cigarrosROD)\n# \n# # Cria o gráfico com ggplot\n# ggplot(data = data.frame(cigarrosROD = db$cigarrosROD), aes(x = seq_along(cigarrosROD), y = cigarrosROD)) +\n#   geom_line(color = \"black\", size = 1) +\n#   geom_point(color = \"black\", size = 3) +\n#   geom_hline(yintercept = media_cigarros, linetype = \"dashed\", color = \"blue\", size = 1) +  # Adiciona a linha média\n#   labs(x = \"Dias\", y = \"Cigarros por dia\") +\n#   scale_x_continuous(breaks = seq_along(db$cigarrosROD), labels = seq_along(db$cigarrosROD)) +\n#   theme_minimal() +\n#   theme(panel.grid = element_blank(),\n#         axis.ticks = element_line())  # Adiciona ticks nos eixos x e y\n```\n:::\n\n\n### Plot simples\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedia_cigarros <- mean(db$cigarrosROD)\n\n# plot mais simples\nplot.ts(db$cigarrosROD)\nabline(h = media_cigarros, col = \"blue\", lty = 2, lwd = 2)\naxis(1, at = db$Dia, labels = db$Dia)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nClaramente os dados desviam bastante da média, logo essa não é uma série estacionária.\n\n### Adf teste\n\nPodemos também utilizar o Augmented Dickey-Fuller (ADF) Test para avaliar a estacionaridade em séries temporais. A função para realizar o teste é a `adf.test()`.\n\nInterpretação do Resultado:\n\n-   Se a estatística do teste for menor que o valor crítico (p \\< 0.05), rejeitamos a hipótese nula e concluímos que a série **é estacionária**.\n-   Se a estatística do teste for maior que o valor crítico (p \\> 0.05), falhamos em rejeitar a hipótese nula, sugerindo que a série é **não estacionária**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Adf teste\nadf.test(db$cigarrosROD)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  db$cigarrosROD\nDickey-Fuller = -0.38979, Lag order = 2, p-value = 0.9797\nalternative hypothesis: stationary\n```\n:::\n:::\n\n\nCorroborando a análise visual, falhamos em rejeitar a hipótese nula, logo podemos assumir que a série temporal em questão não é estacionária. Em seguida vamos ver como podemos ajustar os dados.\n\n### Autocorrelação\n\nA função `acf()` (AutoCorrelation Function) no R é utilizada para calcular e visualizar os coeficientes de autocorrelação em uma série temporal. A autocorrelação mede a correlação entre uma observação e suas observações anteriores em diferentes defasagens (lags de tempo).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calcula as autocorrelações e cria o gráfico\n\nautocorrelacoes = acf(db$cigarrosROD, plot = FALSE)\n\nautoplot(autocorrelacoes)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggtsdisplay(db$cigarrosROD)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nOs valores de lag que tiveram um AFC além do intervalo de confiança (linha tracejada), são candidatos para utilizarmos em nosso modelo ARIMA. Portanto lag 2 e 4 são candidatos. Além disso podemos basear nossa decisão também o teste de Ljung-Box.\n\n### Teste Ljung-Box\n\nO Teste Ljung-Box avalia para cada lag se a séria é estacionária ou não. Podemos testar individualmente para cada lag.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Teste Ljung-Box com lag 2\nBox.test(autocorrelacoes$acf , lag = 3, type = \"Ljung-Box\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tBox-Ljung test\n\ndata:  autocorrelacoes$acf\nX-squared = 8.5179, df = 3, p-value = 0.03644\n```\n:::\n\n```{.r .cell-code}\nlag(db$cigarrosROD,1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] NA  6 10  4 13  4 11  4  6  4 15  5 14  5 21 10 31 13 39 16\n```\n:::\n:::\n\n\nUma outra forma é criar um dataframe com todos os valores de lags calculados na autocorrelação.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Obtém o número máximo de lags disponíveis\nmax_lags <- length(autocorrelacoes$acf) - 1\n\n# Inicialize os vetores para armazenar os resultados\nlags <- numeric(max_lags)\np_values <- numeric(max_lags)\n\n# Itere sobre os lags\nfor (lag in 1:max_lags) {\n  # Execute o teste de Ljung-Box para o lag atual\n  resultado_teste <- Box.test(autocorrelacoes$acf, lag = lag, type = \"Ljung-Box\")\n  \n  # Armazene os resultados\n  lags[lag] <- lag\n  p_values[lag] <- resultado_teste$p.value\n}\n\n# Crie um dataframe com os resultados\nresultados_df <- data.frame(Lag = lags, P_Value = p_values)\nkable(resultados_df)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Lag </th>\n   <th style=\"text-align:right;\"> P_Value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0.9409683 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 0.0166341 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0.0364377 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 0.0200419 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 0.0236724 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 0.0359384 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 0.0197526 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 0.0337181 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 0.0101406 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 0.0150763 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 0.0030557 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 0.0038952 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:right;\"> 0.0006256 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nOu ainda\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsdiag(auto.arima(db$cigarrosROD))\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## Transformação variabilidade e estacionária\n\nPrimeiro vamos modificar a série para que tenha variabilidade constante\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlambda = BoxCox.lambda(db$cigarrosROD)\nlambda\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.1713367\n```\n:::\n\n```{.r .cell-code}\nvar_const = BoxCox(db$cigarrosROD, lambda = lambda)\n\nggtsdisplay(var_const)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nE agora podemos ajustar a serie para que ela fique estacionária.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nndiffs(var_const)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nestacio = diff(var_const, 1)\nggtsdisplay(estacio)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nDe acordo com os resultados, qualquer lag, a não ser o lag 1, poderá ser utilizado para transformar os dados.\n\nPara decidir devemos levar em conta tanto a análise gráfica da autocorrelação quanto o teste de Ljung-Box.\n\nLogo os lags 2 e 4 são bons candidatos. Por parcimônia e sem nenhum critério teórico, vamos optar pelo lag menor, ou seja, lag 2.\n\n## Transformando os dados para estacionários\n\nPara modificar nossa série temporal utilizando lag 2 vamos utilizar a função `diff()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Log\nlag_2 = diff(db$cigarrosROD, differences = 2) # posso colocar o log da diferença também caso os valores fiquem muito pequenos.\n```\n:::\n\n\n### Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedia_lag_2 = mean(lag_2)\nplot.ts(lag_2)\nabline(h = media_lag_2, col = \"blue\", lty = 2, lwd = 2)\naxis(1, at = db$Dia, labels = db$Dia)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nPronto! Agora os valores estão ocilando em torno da média. Apenas para confirmar que agora temos uma série temporal estacionária, podemos rodar novamente o adf.test.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadf.test(lag_2) # testar com outros valores de K(lag) para verificar o p-value\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  lag_2\nDickey-Fuller = -4.3237, Lag order = 2, p-value = 0.01196\nalternative hypothesis: stationary\n```\n:::\n:::\n\n\nEsse banco de dados era apenas para transformar os dados não estacionários para estacionários. Vamos agora carregar outro banco de dados e criar o modelo ARIMA.\n\n## Dados séries temporais\n\n\n::: {.cell}\n\n```{.r .cell-code}\noriginal_ts = read.spss(\"dados series temporais.sav\", to.data.frame=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nre-encoding from CP1252\n```\n:::\n\n```{.r .cell-code}\ndb_ts = original_ts\n\nglimpse(db_ts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 120\nColumns: 11\n$ date         <dbl> 12818995200, 12821673600, 12824092800, 12826771200, 12829…\n$ men          <dbl> 11357.92, 10605.95, 16998.57, 6563.75, 6607.69, 9839.00, …\n$ women        <dbl> 16578.93, 18236.13, 43393.55, 30908.49, 28701.58, 29647.5…\n$ horas        <dbl> 7978, 8290, 8029, 7752, 8685, 7847, 7881, 8121, 7811, 870…\n$ divida       <dbl> 73, 88, 65, 85, 74, 87, 79, 72, 83, 111, 74, 105, 66, 59,…\n$ idade        <dbl> 34, 29, 24, 20, 17, 30, 28, 27, 35, 25, 30, 45, 35, 20, 2…\n$ propaganda   <dbl> 22294.48, 27426.47, 27978.66, 28949.65, 22642.27, 27210.6…\n$ escolaridade <dbl> 20, 20, 26, 22, 21, 23, 22, 20, 15, 20, 16, 29, 22, 28, 2…\n$ YEAR_        <dbl> 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 198…\n$ MONTH_       <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, …\n$ DATE_        <chr> \"JAN 1989\", \"FEB 1989\", \"MAR 1989\", \"APR 1989\", \"MAY 1989…\n```\n:::\n:::\n\n\n### Plot simples\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedia_sal_men <- mean(db_ts$men)\ndb_season = ts(db_ts$men,\n               frequency = 12,\n               start = c(1989, 1))\n\nts.plot(db_season)\nabline(h = media_sal_men, col = \"blue\", lty = 2, lwd = 2)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nseasonplot(db_season,\n           col = rainbow(12),\n           year.labels = TRUE,\n           type = \"o\",\n           pch = 16)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggtsdisplay(db_season)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nSemelhante ao ARIMA (0,0,0)\n\n### Adf teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Adf teste\nadf.test(db_ts$men, k =1) #já está no formato estacionário\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in adf.test(db_ts$men, k = 1): p-value smaller than printed p-value\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  db_ts$men\nDickey-Fuller = -6.1931, Lag order = 1, p-value = 0.01\nalternative hypothesis: stationary\n```\n:::\n:::\n\n\n### Ljung-Box\n\nDescrever\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Teste Ljung-Box com lag 2\nBox.test(db_ts$men , lag = 1, type = \"Ljung-Box\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tBox-Ljung test\n\ndata:  db_ts$men\nX-squared = 19.742, df = 1, p-value = 0.000008865\n```\n:::\n:::\n\n\n## Modelo ARIMA (1,0,0)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelo_sal_men = Arima(db_ts$men, order = c(1,0,0))\n```\n:::\n\n\n#### Plot 1 do modelo (1,0,0)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Supondo que você tenha as séries temporais 'modelo_sal_men$fitted' e 'db_ts$men'\n\n# Cria o gráfico\nplot(modelo_sal_men$x, type = \"l\", col = \"red\", lty = 1, lwd = 2, xlab = \"Tempo\", ylab = \"Salário\")\nlines(modelo_sal_men$fitted, col = \"blue\", lty = 1, lwd = 2)\n\n# Adiciona uma legenda\nlegend(\"topright\", legend = c(\"Real\", \"Modelo\"), col = c(\"red\", \"blue\"), lty = c(1, 1), lwd = 2)\n\n# Adiciona um título ao gráfico\ntitle(main = \"Valores e Reais e do Modelo ARIMA de Salário para Homens\")\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n## Modelo ARIMA (0,1,0)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelo2_sal_men = Arima(db_ts$men, order = c(0,1,0))\n```\n:::\n\n\n#### Plot 1 do modelo (0,1,0)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Supondo que você tenha as séries temporais 'modelo2_sal_men$fitted' e 'db_ts$men'\n\n# Cria o gráfico\nplot(modelo2_sal_men$x, type = \"l\", col = \"red\", lty = 1, lwd = 2, xlab = \"Tempo\", ylab = \"Salário\")\nlines(modelo2_sal_men$fitted, col = \"blue\", lty = 1, lwd = 2)\n\n# Adiciona uma legenda\nlegend(\"topright\", legend = c(\"Real\", \"Modelo\"), col = c(\"red\", \"blue\"), lty = c(1, 1), lwd = 2)\n\n# Adiciona um título ao gráfico\ntitle(main = \"Valores e Reais e do Modelo ARIMA de Salário para Homens\")\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n## Modelo autoARIMA\n\nAssim como o SPSS o R também tem uma função que determina automaticamente os parâmetros p, d, q. Vamos verificar qual modelo a função `auto.arima()`sugere.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Para verificar qual o modelo sugerido pela função auto.arima\nauto.arima(db_ts$men, trace = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n ARIMA(2,1,2) with drift         : Inf\n ARIMA(0,1,0) with drift         : 2434.823\n ARIMA(1,1,0) with drift         : 2412.096\n ARIMA(0,1,1) with drift         : Inf\n ARIMA(0,1,0)                    : 2432.897\n ARIMA(2,1,0) with drift         : 2411.86\n ARIMA(3,1,0) with drift         : 2408.495\n ARIMA(4,1,0) with drift         : 2407.461\n ARIMA(5,1,0) with drift         : 2408.674\n ARIMA(4,1,1) with drift         : Inf\n ARIMA(3,1,1) with drift         : Inf\n ARIMA(5,1,1) with drift         : Inf\n ARIMA(4,1,0)                    : 2405.816\n ARIMA(3,1,0)                    : 2406.731\n ARIMA(5,1,0)                    : 2407.075\n ARIMA(4,1,1)                    : 2394.525\n ARIMA(3,1,1)                    : 2392.515\n ARIMA(2,1,1)                    : 2392.416\n ARIMA(1,1,1)                    : 2391.073\n ARIMA(0,1,1)                    : 2393.07\n ARIMA(1,1,0)                    : 2410.255\n ARIMA(1,1,2)                    : 2392.894\n ARIMA(0,1,2)                    : 2391.92\n ARIMA(2,1,0)                    : 2410.02\n ARIMA(2,1,2)                    : Inf\n ARIMA(1,1,1) with drift         : Inf\n\n Best model: ARIMA(1,1,1)                    \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nSeries: db_ts$men \nARIMA(1,1,1) \n\nCoefficients:\n         ar1      ma1\n      0.2036  -0.9139\ns.e.  0.1002   0.0347\n\nsigma^2 = 29737029:  log likelihood = -1192.43\nAIC=2390.86   AICc=2391.07   BIC=2399.2\n```\n:::\n:::\n\n\nA função sugeriu o modelo 1, 1, 1. Vamos verificar os resultados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelo_auto_sal_men = Arima(db_ts$men, order = c(1,1,1))\n```\n:::\n\n\n#### Plot 1 do modelo (1,1,1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Supondo que você tenha as séries temporais 'modelo_atuo_sal_men$fitted' e 'db_ts$men'\n\n# Cria o gráfico\nplot(modelo_auto_sal_men$x, type = \"l\", col = \"red\", lty = 1, lwd = 2, xlab = \"Tempo\", ylab = \"Salário\")\nlines(modelo_auto_sal_men$fitted, col = \"blue\", lty = 1, lwd = 2)\n\n# Adiciona uma legenda\nlegend(\"topright\", legend = c(\"Real\", \"Modelo\"), col = c(\"red\", \"blue\"), lty = c(1, 1), lwd = 2)\n\n# Adiciona um título ao gráfico\ntitle(main = \"Valores e Reais e do Modelo ARIMA de Salário para Homens\")\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n## Homens - Modelo com variáveis independentes\n\n::: callout-warning\n#### Atenção!\n\nAinda falta modificar os índices p, d, q das variáveis indepentendes como foi feito no SPSS.\n:::\n\n### Auto arima\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Defina as variáveis independentes originais\nnomes_variaveis <- c(\"horas\", \"divida\", \"idade\", \"propaganda\", \"escolaridade\")\n\n# Crie a matriz de covariáveis\ncovars <- as.matrix(db_ts[, nomes_variaveis, drop = FALSE])\n\n\n\n# Atribua os nomes diretamente à matriz de covariáveis\ncolnames(covars) <- nomes_variaveis\n\n\n# \n# covars <- cbind(\n#   db_ts$horas,\n#   db_ts$divida,\n#   db_ts$idade,\n#   db_ts$propaganda,\n#   db_ts$escolaridade\n# )\n\nauto.arima(db_ts$men, xreg = covars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSeries: db_ts$men \nRegression with ARIMA(1,0,0) errors \n\nCoefficients:\n         ar1   intercept   horas   divida     idade  propaganda  escolaridade\n      0.1968  -23753.966  2.0271  34.5286  342.9908      0.2046      -30.3841\ns.e.  0.1000    2752.767  0.2204  20.1900   43.9319      0.0733       41.3101\n\nsigma^2 = 8316739:  log likelihood = -1122.71\nAIC=2261.43   AICc=2262.72   BIC=2283.73\n```\n:::\n:::\n\n\nModelo sugerido é o c(1,0,0)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ajuste o modelo ARIMA com covariáveis\nmodelo_completo = Arima(\n  db_ts$men,\n  order = c(1, 0, 0),\n  xreg = covars, \n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Defina as variáveis independentes originais\nnomes_variaveis <- c(\"horas\", \"divida\", \"idade\", \"propaganda\", \"escolaridade\")\n\n# Inicialize uma lista para armazenar os modelos ajustados para cada VI\nmodelos_vi <- list()\n\n# Loop através das variáveis independentes\nfor (variavel in nomes_variaveis) {\n  \n  # Selecione a VI específica\n  variavel_ts <- db_ts[, variavel, drop = FALSE]\n  \n  # Ajuste as ordens p, d, q para a VI específica\n  ordens_vi <- c(1, 0, 0)  # p, d, q\n  \n  # Ajuste o modelo ARIMA para a VI específica\n  modelo_vi <- Arima(\n    variavel_ts,\n    order = ordens_vi,\n    include.mean = TRUE,\n    transform.pars = TRUE,\n    fixed = NULL,\n    include.drift = FALSE,\n    method = \"ML\",  # Mude conforme necessário\n    optim.control = list(trace = FALSE, REPORT = 1),\n    kappa = 1\n  )\n  \n  # Adicione o modelo ao vetor de modelos\n  modelos_vi[[variavel]] <- modelo_vi\n}\n\n# Agora, você tem modelos ajustados para cada VI na lista modelos_vi\n\n# Combine os modelos ARIMA para as VI em uma única matriz\ncovars <- cbind(\n  modelos_vi$horas$fitted, \n  modelos_vi$divida$fitted, \n  modelos_vi$idade$fitted, \n  modelos_vi$propaganda$fitted, \n  modelos_vi$escolaridade$fitted\n)\n\n# Ajuste o modelo ARIMA principal com as covariáveis\nmodelo_completo <- Arima(\n  db_ts$men,\n  order = c(1, 0, 0),\n  xreg = covars,\n  seasonal = list(order = c(0, 0, 0)),  # Adapte conforme necessário\n  include.mean = TRUE,\n  transform.pars = TRUE,\n  fixed = NULL,\n  include.drift = FALSE,\n  method = \"ML\",  # Mude conforme necessário\n  optim.control = list(trace = FALSE, REPORT = 1),\n  kappa = 1\n)\n```\n:::\n\n\n### Plot do modelo com VIs\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Criar um dataframe com as séries temporais\ndf_full <- data.frame(\n  Tempo = seq_along(modelo_completo$fitted),\n  Ajustado = modelo_completo$fitted,\n  Real = modelo_completo$x\n)\n\n# Criar o gráfico com ggplot2\nggplot(df_full, aes(x = Tempo)) +\n  geom_line(aes(y = Ajustado, color = \"Ajustado\"), size = 1) +\n  geom_line(aes(y = Real, color = \"Real\"), size = 1) +\n  labs(x = \"Tempo\", y = \"Salário\", title = \"Valores Ajustados e Reais de Salário para Homens ao Longo do Tempo\") +\n  scale_color_manual(values = c(\"Ajustado\" = \"blue\", \"Real\" = \"red\"), guide = \"legend\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nDon't know how to automatically pick scale for object of type <ts>. Defaulting\nto continuous.\n```\n:::\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n### AIC, BIC e RMSE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nperformance(modelo_completo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Indices of model performance\n\nAIC      |     AICc |      BIC | R2.modelos_vi$horas$fitted | R2.modelos_vi$divida$fitted | R2.modelos_vi$idade$fitted | R2.modelos_vi$propaganda$fitted | R2.modelos_vi$escolaridade$fitted |     RMSE |    Sigma\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n2421.052 | 6925.052 | 2443.352 |                      0.397 |                       0.213 |                      0.722 |                       5.366e-04 |                             0.656 | 5442.460 | 5633.481\n```\n:::\n:::\n\n\n### Resultados\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize o resumo do modelo\nsummary(modelo_completo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSeries: db_ts$men \nRegression with ARIMA(1,0,0) errors \n\nCoefficients:\n          ar1  intercept  modelos_vi$horas$fitted  modelos_vi$divida$fitted\n      -0.1727   34621.57                   0.7594                 -607.0271\ns.e.   0.1639   40027.85                   1.3741                  316.5860\n      modelos_vi$idade$fitted  modelos_vi$propaganda$fitted\n                     371.3498                        0.1770\ns.e.                 127.6716                        1.0677\n      modelos_vi$escolaridade$fitted\n                            135.8938\ns.e.                         81.0383\n\nsigma^2 = 31455262:  log likelihood = -1202.53\nAIC=2421.05   AICc=2422.35   BIC=2443.35\n\nTraining set error measures:\n                   ME    RMSE      MAE       MPE     MAPE     MASE        ACF1\nTraining set -5.05266 5442.46 3863.789 -11.92625 27.46778 0.826093 0.002906111\n```\n:::\n\n```{.r .cell-code}\n# db_ts$horas,       xreg1    \n# db_ts$divida  ,    xreg2\n# db_ts$idade,       xreg3\n# db_ts$propaganda,  xreg4    \n# db_ts$escolaridade xreg5\n```\n:::\n\n\n#### Coeficientes e valores de p\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lmtest) # pacote para calcular os estimates e valores de p\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lmtest' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: zoo\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'zoo'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n```\n:::\n\n```{.r .cell-code}\n# Use a função coeftest para obter coeficientes e p-valores\ntest_coef <- coeftest(modelo_completo)\n\n# Acesse os coeficientes estimados e os p-valores\ncoeficientes <- round(test_coef[, \"Estimate\"], 3)\np_valores <- round(test_coef[, \"Pr(>|z|)\"], 3)\n\n# Crie uma nova coluna com asteriscos para valores de p significativos\ntest_coef$Significativo <- ifelse(p_valores < 0.05, \"*\", \"\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in test_coef$Significativo <- ifelse(p_valores < 0.05, \"*\", \"\"):\nRealizando coerção de LHD para uma lista\n```\n:::\n\n```{.r .cell-code}\n# Exiba os resultados\nresultados <- data.frame(Coeficientes = coeficientes, p_valores = paste0(format(p_valores, digits = 3), test_coef$Significativo))\nprint(resultados)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                               Coeficientes p_valores\nar1                                  -0.173     0.292\nintercept                         34621.566     0.387\nmodelos_vi$horas$fitted               0.759     0.581\nmodelos_vi$divida$fitted           -607.027     0.055\nmodelos_vi$idade$fitted             371.350    0.004*\nmodelos_vi$propaganda$fitted          0.177     0.868\nmodelos_vi$escolaridade$fitted      135.894     0.094\n```\n:::\n:::\n\n\n### Mulheres - Modelo com variáveis independentes para\n\n#### Verificar qual o melhor modelo utilizando as VIs no auto.arima\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Supondo que você tenha um dataframe 'db_ts' com as variáveis mencionadas\n\n# Defina as variáveis independentes originais\nnomes_variaveis <- c(\"horas\", \"divida\", \"idade\", \"propaganda\", \"escolaridade\")\n\n# Crie a matriz de covariáveis\ncovars <- as.matrix(db_ts[, nomes_variaveis, drop = FALSE])\n\n# Atribua os nomes diretamente à matriz de covariáveis\ncolnames(covars) <- nomes_variaveis\n\n\n# \n# covars <- cbind(\n#   db_ts$horas,\n#   db_ts$divida,\n#   db_ts$idade,\n#   db_ts$propaganda,\n#   db_ts$escolaridade\n# )\n\nauto.arima(db_ts$women, xreg = covars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSeries: db_ts$women \nRegression with ARIMA(0,0,1) errors \n\nCoefficients:\n         ma1   intercept   horas   divida     idade  propaganda  escolaridade\n      0.3351  -37941.151  2.6828  90.5433    1.6294      0.9805      445.6786\ns.e.  0.1096    6458.967  0.5145  52.4388  110.2176      0.1693      102.0171\n\nsigma^2 = 49641429:  log likelihood = -1229.95\nAIC=2475.89   AICc=2477.19   BIC=2498.19\n```\n:::\n:::\n\n\nModelo sugerido é o c(0,0,1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ajuste o modelo ARIMA com covariáveis\nmodelo_completo_women = Arima(\n  db_ts$women,\n  order = c(0, 0, 1),\n  xreg = covars\n)\n\n\n\n# Visualize o resumo do modelo\nsummary(modelo_completo_women)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSeries: db_ts$women \nRegression with ARIMA(0,0,1) errors \n\nCoefficients:\n         ma1   intercept   horas   divida     idade  propaganda  escolaridade\n      0.3351  -37941.151  2.6828  90.5433    1.6294      0.9805      445.6786\ns.e.  0.1096    6458.967  0.5145  52.4388  110.2176      0.1693      102.0171\n\nsigma^2 = 49641429:  log likelihood = -1229.95\nAIC=2475.89   AICc=2477.19   BIC=2498.19\n\nTraining set error measures:\n                     ME     RMSE  MAE       MPE    MAPE      MASE        ACF1\nTraining set -0.1962005 6837.081 4889 -3.414187 14.6811 0.5114592 -0.01923702\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# db_ts$horas,       xreg1    \n# db_ts$divida  ,    xreg2\n# db_ts$idade,       xreg3\n# db_ts$propaganda,  xreg4    \n# db_ts$escolaridade xreg5\n\ncheckresiduals(modelo_completo_women)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tLjung-Box test\n\ndata:  Residuals from Regression with ARIMA(0,0,1) errors\nQ* = 10.048, df = 9, p-value = 0.3466\n\nModel df: 1.   Total lags used: 10\n```\n:::\n:::\n\n\n#### Plot do modelo com VIs\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Criar um dataframe com as séries temporais\ndf_full_women <- data.frame(\n  Tempo = seq_along(modelo_completo_women$fitted),\n  Ajustado = modelo_completo_women$fitted,\n  Real = modelo_completo_women$x\n)\n\n# Criar o gráfico com ggplot2\nggplot(df_full_women, aes(x = Tempo)) +\n  geom_line(aes(y = Ajustado, color = \"Ajustado\"), size = 1) +\n  geom_line(aes(y = Real, color = \"Real\"), size = 1) +\n  labs(x = \"Tempo\", y = \"Salário\", title = \"Valores Ajustados e Reais de Salário para Mulheres ao Longo do Tempo\") +\n  scale_color_manual(values = c(\"Ajustado\" = \"red\", \"Real\" = \"blue\"), guide = \"legend\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDon't know how to automatically pick scale for object of type <ts>. Defaulting\nto continuous.\n```\n:::\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n#### Coeficientes e valores de p\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lmtest) # pacote para calcular os estimates e valores de p\n\n\n# Use a função coeftest para obter coeficientes e p-valores\ntest_coef_women <- coeftest(modelo_completo_women)\n\n# Acesse os coeficientes estimados e os p-valores\ncoeficientes_women <- round(test_coef_women[, \"Estimate\"], 3)\np_valores_women <- round(test_coef_women[, \"Pr(>|z|)\"], 3)\n\n# Crie uma nova coluna com asteriscos para valores de p significativos\ntest_coef_women$Significativo <- ifelse(p_valores_women < 0.05, \"*\", \"\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in test_coef_women$Significativo <- ifelse(p_valores_women < 0.05, :\nRealizando coerção de LHD para uma lista\n```\n:::\n\n```{.r .cell-code}\n# Exiba os resultados\nresultados_women <- data.frame(Coeficientes = coeficientes_women, Pvalores = paste0(format(p_valores_women, digits = 3), test_coef_women$Significativo))\nprint(resultados_women)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             Coeficientes Pvalores\nma1                 0.335   0.002*\nintercept      -37941.151   0.000*\nhoras               2.683   0.000*\ndivida             90.543    0.084\nidade               1.629    0.988\npropaganda          0.981   0.000*\nescolaridade      445.679   0.000*\n```\n:::\n:::\n\n\n## Forecast (previsões)\n\n### Mulheres - 50 anos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwomen_salary_ts = ts(db_ts$women,\n               frequency = 12,\n               start = c(1989, 1))\n\n\nfit_arima_women = auto.arima(women_salary_ts)\n\nfcast_women = forecast(fit_arima_women, h=50)\nautoplot(fcast_women)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\n### Homens - 50 anos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmen_salary_ts = ts(db_ts$men,\n               frequency = 12,\n               start = c(1989, 1))\n\n\nfit_arima_men = auto.arima(men_salary_ts)\n\nfcast_men = forecast(fit_arima_men, h=50)\nautoplot(fcast_men)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n## Extras\n\n### Mais gráficos\n\n#### Plot 2 do modelo (1,0,0)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelo_sal_men = Arima(db_ts$men, order = c(1,0,0))\n\n# Criar um dataframe com as séries temporais\ndf_100 <- data.frame(\n  Tempo = seq_along(modelo_sal_men$fitted),\n  Ajustado = modelo_sal_men$fitted,\n  Real = modelo_sal_men$x\n)\n\n# Criar o gráfico com ggplot2\nggplot(df_100, aes(x = Tempo)) +\n  geom_line(aes(y = Ajustado, color = \"Ajustado\"), size = 1) +\n  geom_line(aes(y = Real, color = \"Real\"), size = 1) +\n  labs(x = \"Tempo\", y = \"Salário\", title = \"Valores Ajustados e Reais de Salário para Homens ao Longo do Tempo\") +\n  scale_color_manual(values = c(\"Ajustado\" = \"red\", \"Real\" = \"blue\"), guide = \"legend\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDon't know how to automatically pick scale for object of type <ts>. Defaulting\nto continuous.\n```\n:::\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n#### Plot 2 do modelo (0,1,0)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Criar um dataframe com as séries temporais\ndf_010 <- data.frame(\n  Tempo = seq_along(modelo2_sal_men$fitted),\n  Ajustado = modelo2_sal_men$fitted,\n  Real = modelo2_sal_men$x\n)\n\n# Criar o gráfico com ggplot2\nggplot(df_010, aes(x = Tempo)) +\n  geom_line(aes(y = Ajustado, color = \"Ajustado\"), size = 1) +\n  geom_line(aes(y = Real, color = \"Real\"), size = 1) +\n  labs(x = \"Tempo\", y = \"Salário\", title = \"Valores Ajustados e Reais de Salário para Homens ao Longo do Tempo\") +\n  scale_color_manual(values = c(\"Ajustado\" = \"red\", \"Real\" = \"blue\"), guide = \"legend\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDon't know how to automatically pick scale for object of type <ts>. Defaulting\nto continuous.\n```\n:::\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n#### Plot 2 do modelo (1,1,1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelo_atuo_sal_men = Arima(db_ts$men, order = c(1,1,1))\n\n# Criar um dataframe com as séries temporais\ndf_111 <- data.frame(\n  Tempo = seq_along(modelo_atuo_sal_men$fitted),\n  Ajustado = modelo_atuo_sal_men$fitted,\n  Real = modelo_atuo_sal_men$x\n)\n\n# Criar o gráfico com ggplot2\nggplot(df_111, aes(x = Tempo)) +\n  geom_line(aes(y = Ajustado, color = \"Ajustado\"), size = 1) +\n  geom_line(aes(y = Real, color = \"Real\"), size = 1) +\n  labs(x = \"Tempo\", y = \"Salário\", title = \"Valores Ajustados e Reais de Salário para Homens ao Longo do Tempo\") +\n  scale_color_manual(values = c(\"Ajustado\" = \"red\", \"Real\" = \"blue\"), guide = \"legend\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDon't know how to automatically pick scale for object of type <ts>. Defaulting\nto continuous.\n```\n:::\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\n## Verificando resíduos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheckresiduals(modelo_auto_sal_men)\n```\n\n::: {.cell-output-display}\n![](lista_7_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tLjung-Box test\n\ndata:  Residuals from ARIMA(1,1,1)\nQ* = 10.891, df = 8, p-value = 0.208\n\nModel df: 2.   Total lags used: 10\n```\n:::\n\n```{.r .cell-code}\nsummary(modelo_auto_sal_men)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSeries: db_ts$men \nARIMA(1,1,1) \n\nCoefficients:\n         ar1      ma1\n      0.2036  -0.9139\ns.e.  0.1002   0.0347\n\nsigma^2 = 29737029:  log likelihood = -1192.43\nAIC=2390.86   AICc=2391.07   BIC=2399.2\n\nTraining set error measures:\n                   ME     RMSE      MAE       MPE     MAPE      MASE\nTraining set 915.6723 5384.571 3662.003 -5.571742 25.15003 0.7829504\n                    ACF1\nTraining set -0.04692903\n```\n:::\n:::\n\n\n## Lista 7 resolvida no SPSS\n\n\n{{< video https://www.youtube.com/watch?v=qTQ1YDgyByE title='Séries Temporais (ARIMA) - Aula Prática #7' >}}\n\n\n\n## Referências\n\n<https://facebook.github.io/prophet/docs/installation.html#r>\n\n<https://rpubs.com/mpleo/timeseries_prophet>\n\n<https://www.youtube.com/watch?v=ny3gRhfVsi4&t=10s>\n\n[https://www.youtube.com/watch?v=Txuo9JQjnKE ótima ref em PT-BR](https://www.youtube.com/watch?v=Txuo9JQjnKE%20ótima%20ref%20em%20PT-BR)\n\n<https://www.youtube.com/watch?v=RJzmHkGWCxs&list=PLEuzmtv9IuT_vg5oE0lQyZR-wgbVeGztt>\n\n## Versões dos pacotes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreport(sessionInfo())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalyses were conducted using the R Statistical language (version 4.3.1; R Core\nTeam, 2023) on Windows 11 x64 (build 22621), using the packages effectsize\n(version 0.8.6; Ben-Shachar MS et al., 2020), Rcpp (version 1.0.11;\nEddelbuettel D et al., 2023), tm (version 0.7.11; Feinerer I, Hornik K, 2023),\nflexplot (version 0.20.5; Fife D, 2024), lubridate (version 1.9.3; Grolemund G,\nWickham H, 2011), rlang (version 1.1.1; Henry L, Wickham H, 2023), NLP (version\n0.2.1; Hornik K, 2020), forecast (version 8.21.1; Hyndman R et al., 2023),\nparameters (version 0.21.3; Lüdecke D et al., 2020), performance (version\n0.10.8; Lüdecke D et al., 2021), easystats (version 0.6.0; Lüdecke D et al.,\n2022), see (version 0.8.1; Lüdecke D et al., 2021), insight (version 0.19.6;\nLüdecke D et al., 2019), bayestestR (version 0.13.1; Makowski D et al., 2019),\nmodelbased (version 0.8.6; Makowski D et al., 2020), report (version 0.5.7;\nMakowski D et al., 2023), correlation (version 0.8.4; Makowski D et al., 2022),\ntibble (version 3.2.1; Müller K, Wickham H, 2023), datawizard (version 0.9.0;\nPatil I et al., 2022), foreign (version 0.8.85; R Core Team, 2023), prophet\n(version 1.0; Taylor S, Letham B, 2021), rempsyc (version 0.1.6; Thériault R,\n2023), tseries (version 0.10.55; Trapletti A, Hornik K, 2023), ggplot2 (version\n3.4.4; Wickham H, 2016), forcats (version 1.0.0; Wickham H, 2023), stringr\n(version 1.5.1; Wickham H, 2023), tidyverse (version 2.0.0; Wickham H et al.,\n2019), dplyr (version 1.1.3; Wickham H et al., 2023), purrr (version 1.0.2;\nWickham H, Henry L, 2023), readr (version 2.1.4; Wickham H et al., 2023), tidyr\n(version 1.3.0; Wickham H et al., 2023), zoo (version 1.8.12; Zeileis A,\nGrothendieck G, 2005), lmtest (version 0.9.40; Zeileis A, Hothorn T, 2002) and\nkableExtra (version 1.3.4; Zhu H, 2021).\n\nReferences\n----------\n  - Ben-Shachar MS, Lüdecke D, Makowski D (2020). \"effectsize: Estimation of\nEffect Size Indices and Standardized Parameters.\" _Journal of Open Source\nSoftware_, *5*(56), 2815. doi:10.21105/joss.02815\n<https://doi.org/10.21105/joss.02815>, <https://doi.org/10.21105/joss.02815>.\n  - Eddelbuettel D, Francois R, Allaire J, Ushey K, Kou Q, Russell N, Ucar I,\nBates D, Chambers J (2023). _Rcpp: Seamless R and C++ Integration_. R package\nversion 1.0.11, <https://CRAN.R-project.org/package=Rcpp>. Eddelbuettel D,\nFrançois R (2011). \"Rcpp: Seamless R and C++ Integration.\" _Journal of\nStatistical Software_, *40*(8), 1-18. doi:10.18637/jss.v040.i08\n<https://doi.org/10.18637/jss.v040.i08>. Eddelbuettel D (2013). _Seamless R and\nC++ Integration with Rcpp_. Springer, New York. doi:10.1007/978-1-4614-6868-4\n<https://doi.org/10.1007/978-1-4614-6868-4>, ISBN 978-1-4614-6867-7.\nEddelbuettel D, Balamuta J (2018). \"Extending R with C++: A Brief Introduction\nto Rcpp.\" _The American Statistician_, *72*(1), 28-36.\ndoi:10.1080/00031305.2017.1375990\n<https://doi.org/10.1080/00031305.2017.1375990>.\n  - Feinerer I, Hornik K (2023). _tm: Text Mining Package_. R package version\n0.7-11, <https://CRAN.R-project.org/package=tm>. Feinerer I, Hornik K, Meyer D\n(2008). \"Text Mining Infrastructure in R.\" _Journal of Statistical Software_,\n*25*(5), 1-54. doi:10.18637/jss.v025.i05\n<https://doi.org/10.18637/jss.v025.i05>.\n  - Fife D (2024). _flexplot: Graphically Based Data Analysis Using 'flexplot'_.\nR package version 0.20.5.\n  - Grolemund G, Wickham H (2011). \"Dates and Times Made Easy with lubridate.\"\n_Journal of Statistical Software_, *40*(3), 1-25.\n<https://www.jstatsoft.org/v40/i03/>.\n  - Henry L, Wickham H (2023). _rlang: Functions for Base Types and Core R and\n'Tidyverse' Features_. R package version 1.1.1,\n<https://CRAN.R-project.org/package=rlang>.\n  - Hornik K (2020). _NLP: Natural Language Processing Infrastructure_. R package\nversion 0.2-1, <https://CRAN.R-project.org/package=NLP>.\n  - Hyndman R, Athanasopoulos G, Bergmeir C, Caceres G, Chhay L, O'Hara-Wild M,\nPetropoulos F, Razbash S, Wang E, Yasmeen F (2023). _forecast: Forecasting\nfunctions for time series and linear models_. R package version 8.21.1,\n<https://pkg.robjhyndman.com/forecast/>. Hyndman RJ, Khandakar Y (2008).\n\"Automatic time series forecasting: the forecast package for R.\" _Journal of\nStatistical Software_, *26*(3), 1-22. doi:10.18637/jss.v027.i03\n<https://doi.org/10.18637/jss.v027.i03>.\n  - Lüdecke D, Ben-Shachar M, Patil I, Makowski D (2020). \"Extracting, Computing\nand Exploring the Parameters of Statistical Models using R.\" _Journal of Open\nSource Software_, *5*(53), 2445. doi:10.21105/joss.02445\n<https://doi.org/10.21105/joss.02445>.\n  - Lüdecke D, Ben-Shachar M, Patil I, Waggoner P, Makowski D (2021).\n\"performance: An R Package for Assessment, Comparison and Testing of\nStatistical Models.\" _Journal of Open Source Software_, *6*(60), 3139.\ndoi:10.21105/joss.03139 <https://doi.org/10.21105/joss.03139>.\n  - Lüdecke D, Ben-Shachar M, Patil I, Wiernik B, Makowski D (2022). \"easystats:\nFramework for Easy Statistical Modeling, Visualization, and Reporting.\" _CRAN_.\nR package, <https://easystats.github.io/easystats/>.\n  - Lüdecke D, Patil I, Ben-Shachar M, Wiernik B, Waggoner P, Makowski D (2021).\n\"see: An R Package for Visualizing Statistical Models.\" _Journal of Open Source\nSoftware_, *6*(64), 3393. doi:10.21105/joss.03393\n<https://doi.org/10.21105/joss.03393>.\n  - Lüdecke D, Waggoner P, Makowski D (2019). \"insight: A Unified Interface to\nAccess Information from Model Objects in R.\" _Journal of Open Source Software_,\n*4*(38), 1412. doi:10.21105/joss.01412 <https://doi.org/10.21105/joss.01412>.\n  - Makowski D, Ben-Shachar M, Lüdecke D (2019). \"bayestestR: Describing Effects\nand their Uncertainty, Existence and Significance within the Bayesian\nFramework.\" _Journal of Open Source Software_, *4*(40), 1541.\ndoi:10.21105/joss.01541 <https://doi.org/10.21105/joss.01541>,\n<https://joss.theoj.org/papers/10.21105/joss.01541>.\n  - Makowski D, Ben-Shachar M, Patil I, Lüdecke D (2020). \"Estimation of\nModel-Based Predictions, Contrasts and Means.\" _CRAN_.\n<https://github.com/easystats/modelbased>.\n  - Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023).\n\"Automated Results Reporting as a Practical Tool to Improve Reproducibility and\nMethodological Best Practices Adoption.\" _CRAN_.\n<https://easystats.github.io/report/>.\n  - Makowski D, Wiernik B, Patil I, Lüdecke D, Ben-Shachar M (2022).\n\"correlation: Methods for Correlation Analysis.\" Version 0.8.3,\n<https://CRAN.R-project.org/package=correlation>. Makowski D, Ben-Shachar M,\nPatil I, Lüdecke D (2020). \"Methods and Algorithms for Correlation Analysis in\nR.\" _Journal of Open Source Software_, *5*(51), 2306. doi:10.21105/joss.02306\n<https://doi.org/10.21105/joss.02306>,\n<https://joss.theoj.org/papers/10.21105/joss.02306>.\n  - Müller K, Wickham H (2023). _tibble: Simple Data Frames_. R package version\n3.2.1, <https://CRAN.R-project.org/package=tibble>.\n  - Patil I, Makowski D, Ben-Shachar M, Wiernik B, Bacher E, Lüdecke D (2022).\n\"datawizard: An R Package for Easy Data Preparation and Statistical\nTransformations.\" _Journal of Open Source Software_, *7*(78), 4684.\ndoi:10.21105/joss.04684 <https://doi.org/10.21105/joss.04684>.\n  - R Core Team (2023). _foreign: Read Data Stored by 'Minitab', 'S', 'SAS',\n'SPSS', 'Stata', 'Systat', 'Weka', 'dBase', ..._. R package version 0.8-85,\n<https://CRAN.R-project.org/package=foreign>.\n  - R Core Team (2023). _R: A Language and Environment for Statistical\nComputing_. R Foundation for Statistical Computing, Vienna, Austria.\n<https://www.R-project.org/>.\n  - Taylor S, Letham B (2021). _prophet: Automatic Forecasting Procedure_. R\npackage version 1.0, <https://CRAN.R-project.org/package=prophet>.\n  - Thériault R (2023). \"rempsyc: Convenience functions for psychology.\" _Journal\nof Open Source Software_, *8*(87), 5466. doi:10.21105/joss.05466\n<https://doi.org/10.21105/joss.05466>, <https://doi.org/10.21105/joss.05466>.\n  - Trapletti A, Hornik K (2023). _tseries: Time Series Analysis and\nComputational Finance_. R package version 0.10-55,\n<https://CRAN.R-project.org/package=tseries>.\n  - Wickham H (2016). _ggplot2: Elegant Graphics for Data Analysis_.\nSpringer-Verlag New York. ISBN 978-3-319-24277-4,\n<https://ggplot2.tidyverse.org>.\n  - Wickham H (2023). _forcats: Tools for Working with Categorical Variables\n(Factors)_. R package version 1.0.0,\n<https://CRAN.R-project.org/package=forcats>.\n  - Wickham H (2023). _stringr: Simple, Consistent Wrappers for Common String\nOperations_. R package version 1.5.1,\n<https://CRAN.R-project.org/package=stringr>.\n  - Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G,\nHayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K,\nOoms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K,\nYutani H (2019). \"Welcome to the tidyverse.\" _Journal of Open Source Software_,\n*4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.\n  - Wickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar\nof Data Manipulation_. R package version 1.1.3,\n<https://CRAN.R-project.org/package=dplyr>.\n  - Wickham H, Henry L (2023). _purrr: Functional Programming Tools_. R package\nversion 1.0.2, <https://CRAN.R-project.org/package=purrr>.\n  - Wickham H, Hester J, Bryan J (2023). _readr: Read Rectangular Text Data_. R\npackage version 2.1.4, <https://CRAN.R-project.org/package=readr>.\n  - Wickham H, Vaughan D, Girlich M (2023). _tidyr: Tidy Messy Data_. R package\nversion 1.3.0, <https://CRAN.R-project.org/package=tidyr>.\n  - Zeileis A, Grothendieck G (2005). \"zoo: S3 Infrastructure for Regular and\nIrregular Time Series.\" _Journal of Statistical Software_, *14*(6), 1-27.\ndoi:10.18637/jss.v014.i06 <https://doi.org/10.18637/jss.v014.i06>.\n  - Zeileis A, Hothorn T (2002). \"Diagnostic Checking in Regression\nRelationships.\" _R News_, *2*(3), 7-10.\n<https://CRAN.R-project.org/doc/Rnews/>.\n  - Zhu H (2021). _kableExtra: Construct Complex Table with 'kable' and Pipe\nSyntax_. R package version 1.3.4,\n<https://CRAN.R-project.org/package=kableExtra>.\n```\n:::\n:::\n",
    "supporting": [
      "lista_7_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}