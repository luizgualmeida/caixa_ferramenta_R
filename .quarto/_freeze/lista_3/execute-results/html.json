{
  "hash": "e311ec250aae61efd9871c5e30e3fd8b",
  "result": {
    "markdown": "# Lista 3 - Matriz de Covariância {#sec-lista-3}\n\n## Pacotes que vamos utilizar\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(emmeans)\nlibrary(nlme)\nlibrary(flexplot)\nlibrary(foreign)\nlibrary(dplyr)\nlibrary(multcomp)\nlibrary(effects)\nlibrary(performance)\nlibrary(easystats)\n```\n:::\n\n\n## Instruções e carregando o banco de dados\n\nVamos utilizar um GMM para verificar o efeito de tempo e grupo sobre os resultados de resp ([o banco já está no formato correto](https://drive.google.com/file/d/17ViQJy-w50z6vm6VdZ1A1lbeTmUuIviB/view?usp=sharing)). Porém, antes disso vamos avaliar qual a melhor matriz de covariância que o modelo deve aplicar aos dados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset = read.spss(\"bd_New drug_respiratory&pulseRESHAPE.sav\", to.data.frame=TRUE)\n```\n:::\n\n\n::: callout-important\n#### Muito importante!\n\nSEMPRE verifique o tipo das variáveis no banco de dados. Elas podem ser fatores, números íntegros, números decimais, etc. As análises mudam MUITO dependendo do tipo de variável que utilizamos no modelo de regressão linear!\n:::\n\nPara verificar o tipo das variáveis podemos utilizar a função `glimpse()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 36\nColumns: 5\n$ Sujeito <dbl> 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,…\n$ drug    <fct> New Drug, New Drug, New Drug, New Drug, New Drug, New Drug, Ne…\n$ Tempo   <dbl> 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,…\n$ resp    <dbl> 3.4, 3.3, 3.3, 3.4, 3.4, 3.3, 3.3, 3.4, 3.4, 3.4, 3.4, 3.4, 3.…\n$ pulse   <dbl> 2.2, 2.1, 2.1, 2.2, 2.1, 2.2, 2.3, 2.4, 2.3, 2.3, 2.4, 2.3, 2.…\n```\n:::\n:::\n\n\nNotem que a variável `Tempo` está como `<dbl>`, indicando que é uma variável contínua. Vejam a aula prática em que o Altay explica que os tempos de coleta na verdade são fatores e não indicam uma ordem ou um contínuo. Seria como dizer que as amostras foram coletadas nos Tempos \"X\", \"Y\" e \"Z\".\n\nPara transformar a variável `Tempo` em um fator podemos utilizar o seguinte código:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset$Tempo = as.factor(dataset$Tempo)\n```\n:::\n\n\nRodando novamente a função `glimpse()` é possível observar que agora sim temos a variável `Tempo` como `<fct>`, indicando que ela é do tipo fator .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 36\nColumns: 5\n$ Sujeito <dbl> 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,…\n$ drug    <fct> New Drug, New Drug, New Drug, New Drug, New Drug, New Drug, Ne…\n$ Tempo   <fct> 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,…\n$ resp    <dbl> 3.4, 3.3, 3.3, 3.4, 3.4, 3.3, 3.3, 3.4, 3.4, 3.4, 3.4, 3.4, 3.…\n$ pulse   <dbl> 2.2, 2.1, 2.1, 2.2, 2.1, 2.2, 2.3, 2.4, 2.3, 2.3, 2.4, 2.3, 2.…\n```\n:::\n:::\n\n\n::: callout-tip\n#### Dica\n\nFaça os modelos antes e depois de transformar a variável `Tempo` em um fator e compare os resultados.\n:::\n\nAgora sim podemos realizar nossas análises e comparar com os resultados do SPSS.\n\n## a) Criando os modelos para a variável Resp\n\nHá diversos pacotes no R que podemos alterar a matriz de covariância do modelo. Optamos por escolher a função `lme()` do pacote `nlme` por ela ter de forma bem direta todas as matrizes escolhidas na aula prática utilizando o SPSS. Recomendamos também o pacote `geepack`para outras matrizes.\n\n### Matriz simétrica\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_resp_sim = lme(\n  fixed = resp ~ 1 + drug + Tempo + drug * Tempo, \n  random =~ 1|Sujeito, \n  correlation = corCompSymm(form = ~1|Sujeito), # Aqui definimos a matriz\n  data = dataset)\n```\n:::\n\n\n### Matriz Ar(1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_resp_AR1 = lme(\n  fixed = resp ~ Tempo + drug + Tempo * drug,\n  random = ~1|Sujeito,\n  correlation = corAR1(form = ~ 1|Sujeito), # Aqui definimos a matriz\n  data = dataset)\n```\n:::\n\n\n### Matriz Diagonal (identidade)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_resp_Iden = lme(\n  fixed = resp ~ drug + Tempo + drug * Tempo,\n  random = ~1|Sujeito,\n  correlation = corIdent(form = ~ 1|Sujeito), # Aqui definimos a matriz\n  data = dataset)\n```\n:::\n\n\n### Matriz Não estruturada (Unstructured)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_resp_Uns = lme(\n  fixed = resp ~ drug + Tempo + drug * Tempo,\n  random = ~1|Sujeito,\n  correlation = corSymm(form = ~ 1|Sujeito), # Aqui definimos a matriz\n  data = dataset)\n```\n:::\n\n\n## b) Comparando os valores de AIC e BIC\n\nPodemos colocar os resultados dos valores de AIC e BIC dos modelos em um dataframe para poder compará-los.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crie um dataframe\ndf_aderencia <- data.frame(\n  Modelo = c(\"model_resp_sim\", \"model_resp_AR1\", \"model_resp_Iden\", \"model_resp_Uns\"),\n  AIC = c(AIC(model_resp_sim), AIC(model_resp_AR1), AIC(model_resp_Iden), AIC(model_resp_Uns)),\n  BIC = c(BIC(model_resp_sim), BIC(model_resp_AR1), BIC(model_resp_Iden), BIC(model_resp_Uns))\n)\n\n# Arredonde os valores para 3 casas decimais\ndf_aderencia$AIC <- round(df_aderencia$AIC, 3)\ndf_aderencia$BIC <- round(df_aderencia$BIC, 3)\n\n# Adicione um asterisco às células correspondentes aos menores valores de AIC e BIC\ndf_aderencia$AIC <- ifelse(df_aderencia$AIC == min(df_aderencia$AIC), paste0(df_aderencia$AIC, \"*\"), df_aderencia$AIC)\ndf_aderencia$BIC <- ifelse(df_aderencia$BIC == min(df_aderencia$BIC), paste0(df_aderencia$BIC, \"*\"), df_aderencia$BIC)\n\n\n# Exiba o dataframe\nprint(df_aderencia)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           Modelo     AIC      BIC\n1  model_resp_sim -51.363  -38.752\n2  model_resp_AR1  -54.3*   -41.69\n3 model_resp_Iden -53.363 -42.153*\n4  model_resp_Uns -53.455  -38.042\n```\n:::\n:::\n\n\n::: callout-tip\n#### Dica!\n\nPodemos utilizar a função `compare_performance` para comparar diversos valores de aderência dos modelos!\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompare_performance(model_resp_sim,\n                    model_resp_AR1,\n                    model_resp_Iden,\n                    model_resp_Uns,\n                    metrics = c(\"AIC\",\"BIC\"),\n                    rank = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Comparison of Model Performance Indices\n\nName            | Model | AIC weights | BIC weights | Performance-Score\n-----------------------------------------------------------------------\nmodel_resp_AR1  |   lme |       0.394 |       0.419 |            98.26%\nmodel_resp_Iden |   lme |       0.184 |       0.432 |            67.80%\nmodel_resp_Uns  |   lme |       0.354 |       0.077 |            44.62%\nmodel_resp_sim  |   lme |       0.068 |       0.072 |             0.00%\n```\n:::\n:::\n\n\nDas duas formas constatamos que o modelo com a matriz de covariância AR1 apresentou os melhores índices de aderência. Note que os valores de AIC e BIC apresentados na saída da função `compare_factors` aparecem ponderados. Os valores são calculados dividindo o peso AIC/BIC de um modelo pelo peso AIC/BIC dos outros modelos ajustados.\n\n## c) Resultado do modelo escolhido - AR1\n\nA matriz de covariância AR(1) é uma escolha adequada para o exemplo da droga e do placebo devido à sua capacidade de capturar a dependência temporal nas respostas dos pacientes em estudos longitudinais. Essa matriz reflete a ideia de que as observações próximas no tempo têm uma correlação mais forte, enquanto as observações mais distantes têm uma correlação mais fraca. Isso é consistente com a possibilidade de que os efeitos da droga persistam ao longo do tempo, mas diminuam com o passar dos dias após a administração.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreport(model_resp_AR1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWe fitted a linear mixed model (estimated using REML and nlminb optimizer) to\npredict resp with Tempo, drug and Sujeito (formula: resp ~ Tempo + drug + Tempo\n* drug). The model included Sujeito as random effect (formula: ~1 | Sujeito).\nThe model's total explanatory power is substantial (conditional R2 = 0.41) and\nthe part related to the fixed effects alone (marginal R2) is of 0.41. The\nmodel's intercept, corresponding to Tempo = 1 and drug = New Drug, is at 3.35\n(95% CI [3.29, 3.41], t(20) = 125.70, p < .001). Within this model:\n\n  - The effect of Tempo [2] is statistically non-significant and positive (beta =\n0.02, 95% CI [-0.04, 0.08], t(20) = 0.59, p = 0.559; Std. beta = 0.21, 95% CI\n[-0.52, 0.93])\n  - The effect of Tempo [3] is statistically non-significant and negative (beta =\n-0.02, 95% CI [-0.09, 0.05], t(20) = -0.49, p = 0.627; Std. beta = -0.21, 95%\nCI [-1.07, 0.66])\n  - The effect of drug [Placebo] is statistically significant and negative (beta\n= -0.12, 95% CI [-0.20, -0.03], t(10) = -3.10, p = 0.011; Std. beta = -1.44,\n95% CI [-2.48, -0.40])\n  - The effect of Tempo [2] × drug [Placebo] is statistically non-significant and\npositive (beta = 8.08e-17, 95% CI [-0.08, 0.08], t(20) = 2.04e-15, p > .999;\nStd. beta = -1.43e-15, 95% CI [-1.02, 1.02])\n  - The effect of Tempo [3] × drug [Placebo] is statistically non-significant and\npositive (beta = 0.03, 95% CI [-0.07, 0.13], t(20) = 0.70, p = 0.493; Std. beta\n= 0.41, 95% CI [-0.82, 1.64])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald t-distribution approximation.\n```\n:::\n:::\n\n\nFaça as análises para a variável Pulse! Lembre-se de não ficar apenas copiando e colando os scripts e mude os nomes das variáveis!\n\n## Extras!\n\n### Gráfico do modelo em uma linha\n\nJá vimos algumas formas de apresentar os gráficos dos modelos. A ideia ao longo destes tutoriais é oferecer várias ferramentas para você poder escolher a mais adequada para seus objetivos. Vamos ver uma forma bem prática de criar um gráfico do nosso modelo escolhido com a função `plot()` em conjunto com a função `allEffects()`!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(allEffects(model_resp_AR1))\n```\n\n::: {.cell-output-display}\n![](lista_3_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### Mudando a referência de um fator\n\nNa análise dos modelos observamos que o grupo \"New Drug\" foi escolhido como referência. Isso é evidenciado pelo fato de que apenas os valores dos estimadores para o grupo \"Placebo\" são apresentados nos resultados. O R escolhe, por padrão, o valor de referência inicial com base na ordem alfabética dos níveis da variável categórica. Nesse caso, \"New Drug\" é escolhido como referência por ser o primeiro nível alfabeticamente.\n\nCaso queira confirmar qual é o valor de referência de uma variável, basta utiliza a função `levels()`, que já vem instalada com o R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(dataset$drug)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"New Drug\" \"Placebo\" \n```\n:::\n:::\n\n\nPodemos alterar facilmente qual será o grupo de referência de nossas análises utilizando a função `relevel()`, que também já vem instalada no pacote base do R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset$drug <- relevel(dataset$drug, ref = \"Placebo\")\nlevels(dataset$drug)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Placebo\"  \"New Drug\"\n```\n:::\n:::\n\n\nNote agora que \"Placebo\" aparece em primeiro lugar, indicando o novo valor de referência. Escreva um novo modelo e compare os resultados com os anteriores.\n\n## Lista 2 resolvida no SPSS\n\n\n{{< video https://youtu.be/gYWld1qSh9c?si=VJdZsrSYAE-2BJpA title='GMM - General Mixed Models - Aula Prática #3 (SPSS)' >}}\n\n\n\n## Referências\n\nhttps://bcheggeseth.github.io/CorrelatedData/marginal-models.html\n\n## Versões dos pacotes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreport(sessionInfo())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalyses were conducted using the R Statistical language (version 4.3.1; R Core\nTeam, 2023) on Windows 11 x64 (build 22621), using the packages effectsize\n(version 0.8.6; Ben-Shachar MS et al., 2020), flexplot (version 0.20.5; Fife D,\n2024), effects (version 4.2.2; Fox J, Weisberg S, 2019), carData (version\n3.0.5; Fox J et al., 2022), mvtnorm (version 1.2.3; Genz A, Bretz F, 2009),\nTH.data (version 1.1.2; Hothorn T, 2023), multcomp (version 1.4.25; Hothorn T\net al., 2008), emmeans (version 1.8.8; Lenth R, 2023), parameters (version\n0.21.3; Lüdecke D et al., 2020), performance (version 0.10.8; Lüdecke D et al.,\n2021), easystats (version 0.6.0; Lüdecke D et al., 2022), see (version 0.8.1;\nLüdecke D et al., 2021), insight (version 0.19.6; Lüdecke D et al., 2019),\nbayestestR (version 0.13.1; Makowski D et al., 2019), modelbased (version\n0.8.6; Makowski D et al., 2020), report (version 0.5.7; Makowski D et al.,\n2023), correlation (version 0.8.4; Makowski D et al., 2022), datawizard\n(version 0.9.0; Patil I et al., 2022), nlme (version 3.1.163; Pinheiro J et\nal., 2023), foreign (version 0.8.85; R Core Team, 2023), survival (version\n3.5.7; Therneau T, 2023), MASS (version 7.3.60; Venables WN, Ripley BD, 2002)\nand dplyr (version 1.1.3; Wickham H et al., 2023).\n\nReferences\n----------\n  - Ben-Shachar MS, Lüdecke D, Makowski D (2020). \"effectsize: Estimation of\nEffect Size Indices and Standardized Parameters.\" _Journal of Open Source\nSoftware_, *5*(56), 2815. doi:10.21105/joss.02815\n<https://doi.org/10.21105/joss.02815>, <https://doi.org/10.21105/joss.02815>.\n  - Fife D (2024). _flexplot: Graphically Based Data Analysis Using 'flexplot'_.\nR package version 0.20.5.\n  - Fox J, Weisberg S (2019). _An R Companion to Applied Regression_, 3rd\nedition. Sage, Thousand Oaks CA.\n<https://socialsciences.mcmaster.ca/jfox/Books/Companion/index.html>. Fox J,\nWeisberg S (2018). \"Visualizing Fit and Lack of Fit in Complex Regression\nModels with Predictor Effect Plots and Partial Residuals.\" _Journal of\nStatistical Software_, *87*(9), 1-27. doi:10.18637/jss.v087.i09\n<https://doi.org/10.18637/jss.v087.i09>. Fox J (2003). \"Effect Displays in R\nfor Generalised Linear Models.\" _Journal of Statistical Software_, *8*(15),\n1-27. doi:10.18637/jss.v008.i15 <https://doi.org/10.18637/jss.v008.i15>. Fox J,\nHong J (2009). \"Effect Displays in R for Multinomial and Proportional-Odds\nLogit Models: Extensions to the effects Package.\" _Journal of Statistical\nSoftware_, *32*(1), 1-24. doi:10.18637/jss.v032.i01\n<https://doi.org/10.18637/jss.v032.i01>.\n  - Fox J, Weisberg S, Price B (2022). _carData: Companion to Applied Regression\nData Sets_. R package version 3.0-5,\n<https://CRAN.R-project.org/package=carData>.\n  - Genz A, Bretz F (2009). _Computation of Multivariate Normal and t\nProbabilities_, series Lecture Notes in Statistics. Springer-Verlag,\nHeidelberg. ISBN 978-3-642-01688-2.\n  - Hothorn T (2023). _TH.data: TH's Data Archive_. R package version 1.1-2,\n<https://CRAN.R-project.org/package=TH.data>.\n  - Hothorn T, Bretz F, Westfall P (2008). \"Simultaneous Inference in General\nParametric Models.\" _Biometrical Journal_, *50*(3), 346-363.\n  - Lenth R (2023). _emmeans: Estimated Marginal Means, aka Least-Squares Means_.\nR package version 1.8.8, <https://CRAN.R-project.org/package=emmeans>.\n  - Lüdecke D, Ben-Shachar M, Patil I, Makowski D (2020). \"Extracting, Computing\nand Exploring the Parameters of Statistical Models using R.\" _Journal of Open\nSource Software_, *5*(53), 2445. doi:10.21105/joss.02445\n<https://doi.org/10.21105/joss.02445>.\n  - Lüdecke D, Ben-Shachar M, Patil I, Waggoner P, Makowski D (2021).\n\"performance: An R Package for Assessment, Comparison and Testing of\nStatistical Models.\" _Journal of Open Source Software_, *6*(60), 3139.\ndoi:10.21105/joss.03139 <https://doi.org/10.21105/joss.03139>.\n  - Lüdecke D, Ben-Shachar M, Patil I, Wiernik B, Makowski D (2022). \"easystats:\nFramework for Easy Statistical Modeling, Visualization, and Reporting.\" _CRAN_.\nR package, <https://easystats.github.io/easystats/>.\n  - Lüdecke D, Patil I, Ben-Shachar M, Wiernik B, Waggoner P, Makowski D (2021).\n\"see: An R Package for Visualizing Statistical Models.\" _Journal of Open Source\nSoftware_, *6*(64), 3393. doi:10.21105/joss.03393\n<https://doi.org/10.21105/joss.03393>.\n  - Lüdecke D, Waggoner P, Makowski D (2019). \"insight: A Unified Interface to\nAccess Information from Model Objects in R.\" _Journal of Open Source Software_,\n*4*(38), 1412. doi:10.21105/joss.01412 <https://doi.org/10.21105/joss.01412>.\n  - Makowski D, Ben-Shachar M, Lüdecke D (2019). \"bayestestR: Describing Effects\nand their Uncertainty, Existence and Significance within the Bayesian\nFramework.\" _Journal of Open Source Software_, *4*(40), 1541.\ndoi:10.21105/joss.01541 <https://doi.org/10.21105/joss.01541>,\n<https://joss.theoj.org/papers/10.21105/joss.01541>.\n  - Makowski D, Ben-Shachar M, Patil I, Lüdecke D (2020). \"Estimation of\nModel-Based Predictions, Contrasts and Means.\" _CRAN_.\n<https://github.com/easystats/modelbased>.\n  - Makowski D, Lüdecke D, Patil I, Thériault R, Ben-Shachar M, Wiernik B (2023).\n\"Automated Results Reporting as a Practical Tool to Improve Reproducibility and\nMethodological Best Practices Adoption.\" _CRAN_.\n<https://easystats.github.io/report/>.\n  - Makowski D, Wiernik B, Patil I, Lüdecke D, Ben-Shachar M (2022).\n\"correlation: Methods for Correlation Analysis.\" Version 0.8.3,\n<https://CRAN.R-project.org/package=correlation>. Makowski D, Ben-Shachar M,\nPatil I, Lüdecke D (2020). \"Methods and Algorithms for Correlation Analysis in\nR.\" _Journal of Open Source Software_, *5*(51), 2306. doi:10.21105/joss.02306\n<https://doi.org/10.21105/joss.02306>,\n<https://joss.theoj.org/papers/10.21105/joss.02306>.\n  - Patil I, Makowski D, Ben-Shachar M, Wiernik B, Bacher E, Lüdecke D (2022).\n\"datawizard: An R Package for Easy Data Preparation and Statistical\nTransformations.\" _Journal of Open Source Software_, *7*(78), 4684.\ndoi:10.21105/joss.04684 <https://doi.org/10.21105/joss.04684>.\n  - Pinheiro J, Bates D, R Core Team (2023). _nlme: Linear and Nonlinear Mixed\nEffects Models_. R package version 3.1-163,\n<https://CRAN.R-project.org/package=nlme>. Pinheiro JC, Bates DM (2000).\n_Mixed-Effects Models in S and S-PLUS_. Springer, New York. doi:10.1007/b98882\n<https://doi.org/10.1007/b98882>.\n  - R Core Team (2023). _foreign: Read Data Stored by 'Minitab', 'S', 'SAS',\n'SPSS', 'Stata', 'Systat', 'Weka', 'dBase', ..._. R package version 0.8-85,\n<https://CRAN.R-project.org/package=foreign>.\n  - R Core Team (2023). _R: A Language and Environment for Statistical\nComputing_. R Foundation for Statistical Computing, Vienna, Austria.\n<https://www.R-project.org/>.\n  - Therneau T (2023). _A Package for Survival Analysis in R_. R package version\n3.5-7, <https://CRAN.R-project.org/package=survival>. Terry M. Therneau,\nPatricia M. Grambsch (2000). _Modeling Survival Data: Extending the Cox Model_.\nSpringer, New York. ISBN 0-387-98784-3.\n  - Venables WN, Ripley BD (2002). _Modern Applied Statistics with S_, Fourth\nedition. Springer, New York. ISBN 0-387-95457-0,\n<https://www.stats.ox.ac.uk/pub/MASS4/>.\n  - Wickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar\nof Data Manipulation_. R package version 1.1.3,\n<https://CRAN.R-project.org/package=dplyr>.\n```\n:::\n:::\n",
    "supporting": [
      "lista_3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}